<?php

/**
 * OrdenVenta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    quesos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class OrdenVenta extends BaseOrdenVenta
{

    public function getProductos(){
        $q = Doctrine_Query::create();
        $q->select('p.*, op.neto as precio, op.cantidad as cantidad, op.detalle as detalle, op.descuento as descuento');
        $q->from('Producto p');
        $q->innerJoin('p.OrdenVentaProducto op');
        $q->innerJoin('p.ClienteProducto c');
        $q->where('op.orden_venta_id = ?', $this->getId());
        return $q->execute();
    }

    public function getValorNeto(){
        $productos = $this->getProductos();

        $neto = 0;

        foreach($productos as $producto){
            $neto += $producto->getPrecio()*$producto->getCantidad();
        }

        $n = new sfNumberFormat('es_CL');
        return '$'.$n->format($neto, 'd', 'CLP');
    }

    public function getIVA(){
        $productos = $this->getProductos();
        $neto = 0;

        foreach($productos as $producto){
            $neto += $producto->getPrecio()*$producto->getCantidad()*(100-$producto->getDescuento())/100;
        }

        $iva = number_format($neto*0.19,'0',',','.');
        $n = new sfNumberFormat('es_CL');
        return '$'.$n->format($iva, 'd', 'CLP');
    }





    public function getValorTotal(){

        $productos = $this->getProductos();


        $neto = 0;

        foreach($productos as $producto){
            $neto += $producto->getPrecio()*$producto->getCantidad()*(100-$producto->getDescuento())/100;
        }

        $total = number_format($neto*1.19,'0',',','.');


        $n = new sfNumberFormat('es_CL');
        return '$'.$n->format($total, 'd', 'CLP');
    }

    public function getOrdenCompra(){

        $numero = $this->getNOc();
        $orden_compra = Doctrine_Core::getTable('OrdenCompra')->findOneByNumero($numero);
        if($orden_compra){
            return $orden_compra->getAccion();
        }
        return 'Orden no encontrada';
    }



  
}