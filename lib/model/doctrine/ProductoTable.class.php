<?php

/**
 * ProductoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProductoTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ProductoTable
     */
    static public $unidades = array(
        'cc' => 'cc',
        'g' => 'g'
    );

    public function getUnidades(){
        return self::$unidades;
    }

    public static function getInstance()
    {
        return Doctrine_Core::getTable('Producto');
    }

    public function getForRama(array $parameters)
    {
        if(key_exists('rama', $parameters)){
            $producto = Doctrine_Core::getTable('Producto')->findByRama($parameters['rama']);
            if(count($producto) == 0){
                throw new sfError404Exception(sprintf('El producto de la rama "%s" no existe', $parameters['rama']));
            }
            else{
                return $producto;
            }
        }
        else{
            return Doctrine_Core::getTable('Producto')->findAll();
        }  
    }

    public function getProductosCompetencia(array $parameters)
    {
        if(key_exists('codigo', $parameters)){
            $producto = Doctrine_Core::getTable('Producto')->findOneByCodigo($parameters['codigo']);
            if(count($producto) == 0){
                throw new sfError404Exception(sprintf('El producto con el codigo "%s" no existe', $parameters['codigo']));
            }
            else{
                return $producto->getProductosRelacionados();
            }
        }
        else{
            return Doctrine_Core::getTable('Producto')->findAll();
        }
    }

    public function getLastCodigo($nombre)
    {
        $q = Doctrine_Query::create();
        $q->select("p.codigo");
        $q->from("Producto p");
        $q->where('p.codigo LIKE ?', $nombre.'%');
        $q->orderBy("p.codigo DESC");
        $producto = $q->fetchOne();
  
        if($producto){
            $codigo = substr($producto->getCodigo(), 4, 2);
            $nuevocodigo = intval($codigo);
            $nuevocodigo = $nuevocodigo + 1;

            if($nuevocodigo < 10){

                return '0'.$nuevocodigo;
            }
            else{
                return $nuevocodigo;
            }
            
        }
        else{
            return '01';
        }
    }

    public function getNombresInput(){
        $productos = Doctrine_Core::getTable('Producto')->findAll();
        $nombres = array();

        foreach($productos as $producto){
            $nombres[$producto->getId()] = $producto->getNombreCompleto();
        }

        return $nombres;
    }
}