<?php

/**
 * LoteTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class LoteTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object LoteTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Lote');
    }

    public function getCodigos(){
        $q = Doctrine_Query::create();
        $q->from('Lote');
        $q->groupBy('producto_id');
//        $codigos = $q->execute();
//        $retorno = array();
//
//        foreach($codigos as $codigo){
//            $retorno[] = $codigo->getProductoId();
//        }
//        return $retorno;
        return $q->execute();

    }

        public function getCodigosPorRama($rama){
        $q = Doctrine_Query::create();
        $q->from('Lote l, l.Producto p');
        $q->where('p.rama_id = ?', $rama);
        $q->groupBy('producto_id');
        return $q->execute();

    }

    public function getTodasFechas(){
        $q = Doctrine_Query::create();
        $q->from('Lote');
        $q->groupBy('fecha_elaboracion');
        $q->orderBy('fecha_elaboracion DESC');
        $fechas = $q->execute();

        $retorno = array();
        foreach($fechas as $fecha){
            $retorno[] = $fecha->getFechaElaboracion();
        }
        return $retorno;
    }

    public function getLastCodigo($fecha, $codProd)
    {
        $nombre = $fecha.'-'.$codProd;
        $q = Doctrine_Query::create();
        $q->select("l.numero");
        $q->from("Lote l");
        $q->where('l.numero LIKE ?', $nombre.'%');
        $q->orderBy("l.numero DESC");
        $lote = $q->fetchOne();

        if($lote){
            $codigo = substr($lote->getNumero(), 14, 2);
            $nuevocodigo = intval($codigo);
            $nuevocodigo = $nuevocodigo + 1;
            return $nuevocodigo;

        }
        else{
            return '1';
        }
    }

 public function getLastLote()
    {
       
        $q = Doctrine_Query::create();
        $q->select("l.*");
        $q->from("Lote l");
        $q->orderBy("l.id DESC");
        $lote = $q->fetchOne();
        return $lote;
    }
    
 public function getCantidadesProducidasPorLote()
    {
       
        
                
        $q2 = Doctrine_Query::create()
        ->select('r.id as ident, p.id as ident, l.cantidad as cantidades')
        ->from('Lote l')
        ->leftJoin('l.Producto p')
        ->leftJoin('p.Rama r');
        //->where('p.rama_id IN (SELECT id FROM rama WHERE 1)');
       
      /* $q2 = Doctrine_Query::create();
        $q2->select('r.nombre, sum(l.cantidad) as suma');
        $q2->from('Lote l, Producto p, Rama r');
        $q2->where('l.producto_id = p.id');
        $q2->andWhere('p.rama_id = r.id');
        $q2->andWhere('p.rama_id IN (SELECT id FROM rama WHERE 1)');*/
      
      return $q2->execute();
      
      
      
      //tengo que generar un arreglo que sume las cantidades, no se pudo via query.
      
      
    }
    

     public function getCostosDirectos($from, $to)
    {
                       
        $q1 = Doctrine_Query::create()
        ->select('r.nombre as nombre, p.id as ident, p.nombre as prodnombre, l.cantidad as cantidad, c.valor as valor')
        ->from('CostosDirectos c')
        ->leftjoin('c.Lote l')
        ->leftjoin('l.Producto p')  
        ->leftjoin('p.Rama r')
        ->where('fecha between ? and ?', array($from, $to)); 
      
      return $q1->execute();
      
      
      
 
      
      
    }
}
